// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  email       String   @unique
  phoneNumber String
  role        String
  userName    String   @unique
  createdAt   DateTime @default(now())

  fleetId String?
  fleet   Fleet?  @relation(fields: [fleetId], references: [id])
}

model Fleet {
  id                String            @id @default(uuid())
  fleetName         String
  fleetBaseLocation String
  latitude          Float
  longitude         Float
  operationalStatus OperationalStatus @default(FULLY_OPERATIONAL)
  createdAt         DateTime          @default(now())

  trucks  Truck[]
  drivers Driver[]
  users   Users[]
}

model Truck {
  id                 String      @id @default(uuid())
  truckModel         String
  registrationNumber String      @unique
  manufacturer       String
  yearOfManufacture  String
  capacity           String
  dimensions         String?
  fuelType           String
  mileage            String?
  status             TruckStatus @default(AVAILABLE)

  fleetId String
  fleet   Fleet  @relation(fields: [fleetId], references: [id])

  driverId String?
  driver   Driver? @relation("DriverToTruck", fields: [driverId], references: [id])
}

model Driver {
  id         String       @id @default(uuid())
  name       String
  email      String       @unique
  registerId String       @unique
  phone      String
  license    String       @unique
  experience String
  status     DriverStatus @default(AVAILABLE)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  fleetId String?
  fleet   Fleet?  @relation(fields: [fleetId], references: [id])

  trucks Truck[] @relation("DriverToTruck")
}

enum OperationalStatus {
  FULLY_OPERATIONAL
  PARTIALLY_OPERATIONAL
  UNDER_MAINTENANCE
}

enum DriverStatus {
  ASSIGNED
  AVAILABLE
  ON_LEAVE
}

enum TruckStatus {
  AVAILABLE
  UNDER_MAINTENANCE
  OUT_OF_SERVICE
  IN_TRANSIT
  LOADING
  UNLOADING
  WAITING_FOR_ASSIGNMENT
  IDLE
  ON_SALE
}
